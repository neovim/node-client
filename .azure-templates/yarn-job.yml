parameters:
  name: ''  # defaults for any parameters that aren't specified
  vmImage: ''

jobs:
- job: ${{ parameters.name }}
  pool:
    vmImage: ${{ parameters.vmImage }}
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '8.x'
    displayName: 'Install Node.js'
  - script: yarn
    displayName: 'yarn install'
  - script: yarn bootstrap
    displayName: 'lerna  bootstrap'
  - bash: yarn build
    displayName: 'yarn build'
  - script: yarn lint
    displayName: 'yarn lint'
    condition: eq(variables['Agent.OS'], 'Darwin')
  - bash: |
      curl -LO https://github.com/neovim/neovim/releases/download/nightly/nvim-macos.tar.gz
      tar xzf nvim-macos.tar.gz
      export PATH="${PATH}:node_modules/.bin:$(pwd)/nvim-osx64/bin"
      nvim --version
      yarn test-build --stream
    condition: eq(variables['Agent.OS'], 'Darwin')
    displayName: 'Install neovim and run test(osx)'
  - bash: |
      curl -LO https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.tar.gz
      tar xzf nvim-linux64.tar.gz
      export PATH="${PATH}:node_modules/.bin:$(pwd)/nvim-linux64/bin"
      nvim --version
      yarn test-build --stream
    condition: eq(variables['Agent.OS'], 'Linux')
    displayName: 'Install neovim and run test (linux)'
  - bash: |
      curl -LO 'https://github.com/neovim/neovim/releases/download/nightly/nvim-win64.zip'
      unzip nvim-win64.zip
      export PATH="${PATH}:node_modules/.bin:$(pwd)/Neovim/bin"
      echo ${PATH}
      nvim --version
      yarn test-build --stream
    condition: eq(variables['Agent.OS'], 'Windows_NT')
    displayName: 'Install neovim and run test (windows)'
  - script: |
      yarn global add codecov
      export PATH="$PATH:`yarn global bin`"
      export CODECOV_TOKEN = $(CODECOV_TOKEN)
      codecov -t $(CODECOV_TOKEN)
    condition: eq(variables['Agent.OS'], 'Darwin')
    displayName: 'Upload to codecov'
